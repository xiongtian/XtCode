事务的四个特性（ACID  ）：
1、原子性
2、一致性
3、隔离性
4、持久性


Spring中进行注解事务管理
1、在Spring配置文件配置事务管理器
2、在Spring配置文件，开启注解式事务
  1) 在spring配置文件中引入名称空间
  2) 开启事务注解
3、在service类上面（或者service类里面啊方法上面）添加事务注解
@Transactional
可以加到类上，也可以加到方法上
  1) 如果把这个注解添加到类上，这个类里面所有的方法添加事务
  2) 如果把这个注解添加到方法上，这个方法添加事务
声明式事务管理注解参数配置：
在@Transactional里面可以配置事务相关的参数
   * propagation: 事务的传播行为
     - 1 多事务方法直接进行调用，这个过程中事务是如何进行管理的
     事务方法：对数据库表进行变化的操作
     Spring框架事务传播行为有7种：（列举出两个常用的，其他的做了解）
        REQUIRED:如果调用的方法本身有事务，调用之后，被调用的方法使用调用方法里面的事务
                 如果调用的方法本身没有事务，调用之后，创建新事务
        REQUIRED_NEW:如果方法调用另一个方法，不管调用的方法是否有事务，都创建新的事务
   * isolation: 事务隔离级别
   * timeout: 超时时间：
      - 1 事务需要在一定的时间内进行提交，如果不提交会进行回滚
      - 2 默认值是-1（不超时），设置时间以秒为单位进行
   * readOnly: 是否只读
     - 1 readOnly 默认是false
   * rollbackFor: 回滚
     - 1 设置出现哪些异常进行事务回滚
   * noRollbackFor: 不回滚
     - 1 设置哪些异常不进行事务回滚

事务有特性称为隔离性，多事务操作之间不会产生影响，不考虑隔离性会产生很多问题：
有三个问题：脏读、不可重复读、虚（幻）读
1) 脏读：一个未提交事务读取到另一个未提交事务的数据
2) 不可重复读：一个未提交事务读取到另一个事务提交修改的数据
3) 虚读：一个未提交事务读取到另一个提交事务添加的数据

通过设置事务隔离级别，解决读问题
                                脏读      不可重复读       幻读
READ UNCOMMITTED(读未提交)       有           有            有
READ COMMITTED(读已提交)         无           有            有
REPEATABLE READ(可重复读)        无           无            有       (mysql默认)
SERIALIZABLE(串行化)             无           无            无

XML方式的：
在spring配置文件中操作：
第一步：配置事务管理器
第二步：配置通知
第三步：配置切入点和切面